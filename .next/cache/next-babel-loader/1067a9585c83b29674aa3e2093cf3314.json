{"ast":null,"code":"var _jsxFileName = \"C:\\\\git-test\\\\Nextjs\\\\bitprice\\\\pages\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport _JSXStyle from \"styled-jsx/style\";\nvar __jsx = React.createElement;\nimport Axios from 'axios';\nimport React, { useState, useEffect } from 'react';\nimport Head from 'next/head';\n\nfunction Index(props) {\n  _s();\n\n  var _this = this;\n\n  var currencylist = props.posts.rates;\n  var currencies = [];\n  var currencyValue = [];\n\n  for (var i in currencylist) {\n    currencies.push({\n      key: i,\n      value: currencylist[i]\n    });\n  }\n\n  console.log(currencies);\n\n  var _useState = useState(1),\n      amount = _useState[0],\n      setamount = _useState[1];\n\n  var _useState2 = useState(\"USD\"),\n      from = _useState2[0],\n      setFrom = _useState2[1];\n\n  var _useState3 = useState(\"INR\"),\n      to = _useState3[0],\n      setTo = _useState3[1];\n\n  var _useState4 = useState(false),\n      result = _useState4[0],\n      setResult = _useState4[1];\n\n  var convertCurrency = function convertCurrency() {\n    /*https://api.exchangeratesapi.io/latest?base=${from}&symbols=${to}&amount=${amount}*/\n    Axios.get(\"https://api.exchangeratesapi.io/latest?base=USD\").then(function (data) {\n      console.log(data);\n      var value = amount * data.data.rates[to];\n      setResult(value);\n    })[\"catch\"](function (error) {\n      console.log(error);\n    });\n  };\n\n  return __jsx(\"div\", {\n    className: \"jsx-9097066\" + \" \" + \"Converter\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }, __jsx(Head, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }\n  }, __jsx(\"title\", {\n    className: \"jsx-9097066\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 17\n    }\n  }, \"Currency converter\")), __jsx(\"h2\", {\n    className: \"jsx-9097066\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }\n  }, \"Latest Foreign currency exchange rates\"), __jsx(\"table\", {\n    className: \"jsx-9097066\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }\n  }, currencies.map(function (post) {\n    return __jsx(\"tr\", {\n      className: \"jsx-9097066\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 29\n      }\n    }, __jsx(\"th\", {\n      className: \"jsx-9097066\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 33\n      }\n    }, post.key), __jsx(\"th\", {\n      className: \"jsx-9097066\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 33\n      }\n    }, post.value));\n  })), __jsx(_JSXStyle, {\n    id: \"9097066\",\n    __self: this\n  }, \"@media only screen and (min-width:900px){.Converter.jsx-9097066{margin-top:3%;margin-left:40%;}}@media only screen and (max-width:899px){.Converter.jsx-9097066{margin-left:10vw;}}table.jsx-9097066{border-collapse:collapse;border-spacing:0;width:40%;border:1px solid #ddd;}th.jsx-9097066,td.jsx-9097066{text-align:left;padding:16px;}tr.jsx-9097066:nth-child(even){background-color:#f2f2f2;}.Form.jsx-9097066 input.jsx-9097066,select.jsx-9097066{padding:5px;margin:5px 10px;border-radius:5px;border:1px solid rgba(119,119,119,0.5);}.Form.jsx-9097066 button.jsx-9097066{padding:5px 10px;border-radius:5px;background:rgb(11,170,59);color:white;border:none;}.Converter.jsx-9097066 h3.jsx-9097066{background-color:#ccc;border-radius:10px;padding:15px;width:300px;font-size:30px;color:black;}.Converter.jsx-9097066 h2.jsx-9097066 span.jsx-9097066{color:rgb(11,170,59);}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkM6XFxnaXQtdGVzdFxcTmV4dGpzXFxiaXRwcmljZVxccGFnZXNcXGluZGV4LmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQStDUyxBQUk4QixBQU9HLEFBSUssQUFPVCxBQUtTLEFBSWIsQUFRSyxBQVFLLEFBVUMsWUF6QlAsRUEzQkcsRUFrQk4sQ0FYYixBQTRCa0IsSUFrQnRCLENBVnVCLEdBaENGLEFBWW5CLEdBS29CLENBVHBCLENBakJFLEtBa0M0QixNQVFmLENBaENILElBaUJnQyxNQWhCcEIsRUFnQ1gsT0FSQyxLQVNHLE9BUkgsQ0F4QmQsT0FpQ2EsSUFoQmYsQUFRQSxRQVVBIiwiZmlsZSI6IkM6XFxnaXQtdGVzdFxcTmV4dGpzXFxiaXRwcmljZVxccGFnZXNcXGluZGV4LmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IEF4aW9zIGZyb20gJ2F4aW9zJztcclxuaW1wb3J0IFJlYWN0LHt1c2VTdGF0ZSx1c2VFZmZlY3R9IGZyb20gJ3JlYWN0JztcclxuaW1wb3J0IEhlYWQgZnJvbSAnbmV4dC9oZWFkJztcclxuIGZ1bmN0aW9uIEluZGV4KHByb3BzKXtcclxuICAgIHZhciBjdXJyZW5jeWxpc3Q9cHJvcHMucG9zdHMucmF0ZXM7XHJcbiAgICAgY29uc3QgY3VycmVuY2llcz1bXTtcclxuICAgICBjb25zdCBjdXJyZW5jeVZhbHVlPVtdO1xyXG4gICAgZm9yKHZhciBpIGluIGN1cnJlbmN5bGlzdClcclxuICAgIHtcclxuICAgICAgICBjdXJyZW5jaWVzLnB1c2goe2tleTppLHZhbHVlOmN1cnJlbmN5bGlzdFtpXX0pXHJcbiAgICB9IFxyXG4gICAgY29uc29sZS5sb2coY3VycmVuY2llcylcclxuICAgIGNvbnN0IFthbW91bnQsc2V0YW1vdW50XT11c2VTdGF0ZSgxKTtcclxuICAgIGNvbnN0IFtmcm9tLHNldEZyb21dPXVzZVN0YXRlKFwiVVNEXCIpO1xyXG4gICAgY29uc3QgW3RvLHNldFRvXT11c2VTdGF0ZShcIklOUlwiKTtcclxuICAgIGNvbnN0IFtyZXN1bHQsc2V0UmVzdWx0XT11c2VTdGF0ZShmYWxzZSk7XHJcbiAgICBjb25zdCBjb252ZXJ0Q3VycmVuY3k9KCk9PnsvKmh0dHBzOi8vYXBpLmV4Y2hhbmdlcmF0ZXNhcGkuaW8vbGF0ZXN0P2Jhc2U9JHtmcm9tfSZzeW1ib2xzPSR7dG99JmFtb3VudD0ke2Ftb3VudH0qL1xyXG4gICAgICAgIEF4aW9zLmdldChgaHR0cHM6Ly9hcGkuZXhjaGFuZ2VyYXRlc2FwaS5pby9sYXRlc3Q/YmFzZT1VU0RgKVxyXG4gICAgICAgIC50aGVuKChkYXRhKT0+e1xyXG4gICAgICAgICAgICBjb25zb2xlLmxvZyhkYXRhKVxyXG4gICAgICAgICAgICBjb25zdCB2YWx1ZT1hbW91bnQqZGF0YS5kYXRhLnJhdGVzW3RvXVxyXG4gICAgICAgICAgICBzZXRSZXN1bHQodmFsdWUpXHJcbiAgICAgICAgfSkuY2F0Y2goZXJyb3I9PntcclxuICAgICAgICAgICAgY29uc29sZS5sb2coZXJyb3IpO1xyXG4gICAgICAgIH0pXHJcblxyXG4gICAgfVxyXG4gICAgcmV0dXJuKFxyXG4gICAgICAgIFxyXG4gICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiQ29udmVydGVyXCI+XHJcbiAgICAgICAgICAgIDxIZWFkPlxyXG4gICAgICAgICAgICAgICAgPHRpdGxlPkN1cnJlbmN5IGNvbnZlcnRlcjwvdGl0bGU+XHJcbiAgICAgICAgICAgIDwvSGVhZD5cclxuICAgICAgICAgICAgPGgyPkxhdGVzdCBGb3JlaWduIGN1cnJlbmN5IGV4Y2hhbmdlIHJhdGVzPC9oMj5cclxuICAgICAgICAgICAgPHRhYmxlPlxyXG4gICAgICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgICAgIGN1cnJlbmNpZXMubWFwKChwb3N0KT0+KFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRyPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0aD57cG9zdC5rZXl9PC90aD5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGg+e3Bvc3QudmFsdWV9PC90aD5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdHI+XHJcbiAgICAgICAgICAgICAgICAgICAgKSlcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgPC90YWJsZT5cclxuICAgICAgICAgXHJcbiAgICAgICBcclxuICAgICAgICA8c3R5bGUganN4PlxyXG4gICAgICAgIHtgXHJcbiAgICAgICAgQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWluLXdpZHRoOjkwMHB4KXtcclxuICAgICAgICAgICAgLkNvbnZlcnRlcntcclxuICAgICAgICAgICAgICAgIG1hcmdpbi10b3A6MyU7XHJcbiAgICAgICAgICAgICAgICBtYXJnaW4tbGVmdDo0MCU7XHJcbiAgICAgICAgICAgICAgICBcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgICAgICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6ODk5cHgpe1xyXG4gICAgICAgICAgICAuQ29udmVydGVye1xyXG4gICAgICAgICAgICAgICAgbWFyZ2luLWxlZnQ6MTB2dztcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgICAgICB0YWJsZSB7XHJcbiAgICAgICAgICAgIGJvcmRlci1jb2xsYXBzZTogY29sbGFwc2U7XHJcbiAgICAgICAgICAgIGJvcmRlci1zcGFjaW5nOiAwO1xyXG4gICAgICAgICAgICB3aWR0aDogNDAlO1xyXG4gICAgICAgICAgICBib3JkZXI6IDFweCBzb2xpZCAjZGRkO1xyXG4gICAgICAgICAgfVxyXG4gICAgICAgICAgXHJcbiAgICAgICAgICB0aCwgdGQge1xyXG4gICAgICAgICAgICB0ZXh0LWFsaWduOiBsZWZ0O1xyXG4gICAgICAgICAgICBwYWRkaW5nOiAxNnB4O1xyXG4gICAgICAgICAgfVxyXG4gICAgICAgICAgXHJcbiAgICAgICAgICB0cjpudGgtY2hpbGQoZXZlbikge1xyXG4gICAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjJmMmYyO1xyXG4gICAgICAgICAgfVxyXG4gICAgICAgXHJcbiAgICAgICAgLkZvcm0gaW5wdXQsIHNlbGVjdCB7XHJcbiAgICAgICAgICAgIHBhZGRpbmc6IDVweDtcclxuICAgICAgICAgICAgbWFyZ2luOiA1cHggMTBweDtcclxuICAgICAgICAgICAgYm9yZGVyLXJhZGl1czogNXB4O1xyXG4gICAgICAgICAgICBib3JkZXI6IDFweCBzb2xpZCByZ2JhKDExOSwgMTE5LCAxMTksIDAuNSk7XHJcbiAgICAgICAgICAgIFxyXG4gICAgICAgIH1cclxuICAgICAgICBcclxuICAgICAgICAuRm9ybSBidXR0b24ge1xyXG4gICAgICAgICAgICBwYWRkaW5nOiA1cHggMTBweDtcclxuICAgICAgICAgICAgYm9yZGVyLXJhZGl1czogNXB4O1xyXG4gICAgICAgICAgICBiYWNrZ3JvdW5kOiByZ2IoMTEsIDE3MCwgNTkpO1xyXG4gICAgICAgICAgICBjb2xvcjogd2hpdGU7XHJcbiAgICAgICAgICAgIGJvcmRlcjogbm9uZTtcclxuICAgICAgICB9XHJcbiAgICAgICBcclxuICAgICAgICAuQ29udmVydGVyIGgzIHtcclxuICAgICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogI2NjYztcclxuICAgICAgICAgICAgYm9yZGVyLXJhZGl1czogMTBweDtcclxuICAgICAgICAgICAgcGFkZGluZzogMTVweDtcclxuICAgICAgICAgICAgd2lkdGg6MzAwcHg7XHJcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogMzBweDtcclxuICAgICAgICAgICAgY29sb3I6YmxhY2s7XHJcbiAgICAgICAgICAgIFxyXG4gICAgICAgIH1cclxuICAgICAgICBcclxuICAgICAgICAuQ29udmVydGVyIGgyIHNwYW4ge1xyXG4gICAgICAgICAgICBjb2xvcjogcmdiKDExLCAxNzAsIDU5KTtcclxuICAgICAgICB9XHJcbiAgICAgICAgYH1cclxuICAgIDwvc3R5bGU+XHJcbiAgICA8L2Rpdj5cclxuXHJcbiAgICApO1xyXG59XHJcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBnZXRTdGF0aWNQcm9wcygpIHtcclxuIFxyXG4gICAgY29uc3QgcmVzID0gYXdhaXQgZmV0Y2goJ2h0dHBzOi8vYXBpLmV4Y2hhbmdlcmF0ZXNhcGkuaW8vbGF0ZXN0P2Jhc2U9VVNEJylcclxuICAgIGNvbnN0IHBvc3RzID0gYXdhaXQgcmVzLmpzb24oKVxyXG4gICAgXHJcbiAgICByZXR1cm4ge1xyXG4gICAgICBwcm9wczoge1xyXG4gICAgICAgIHBvc3RzLFxyXG4gICAgICB9LFxyXG4gICAgfVxyXG4gIH1cclxuICBleHBvcnQgZGVmYXVsdCBJbmRleDsiXX0= */\\n/*@ sourceURL=C:\\\\\\\\git-test\\\\\\\\Nextjs\\\\\\\\bitprice\\\\\\\\pages\\\\\\\\index.js */\"));\n}\n\n_s(Index, \"Qj8Hrp/p1qxemNNaqMLqcKle0zA=\");\n\n_c = Index;\nexport var __N_SSG = true;\nexport default Index;\n\nvar _c;\n\n$RefreshReg$(_c, \"Index\");","map":{"version":3,"sources":["C:/git-test/Nextjs/bitprice/pages/index.js"],"names":["Axios","React","useState","useEffect","Head","Index","props","currencylist","posts","rates","currencies","currencyValue","i","push","key","value","console","log","amount","setamount","from","setFrom","to","setTo","result","setResult","convertCurrency","get","then","data","error","map","post"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,IAAcC,QAAd,EAAuBC,SAAvB,QAAuC,OAAvC;AACA,OAAOC,IAAP,MAAiB,WAAjB;;AACC,SAASC,KAAT,CAAeC,KAAf,EAAqB;AAAA;;AAAA;;AAClB,MAAIC,YAAY,GAACD,KAAK,CAACE,KAAN,CAAYC,KAA7B;AACC,MAAMC,UAAU,GAAC,EAAjB;AACA,MAAMC,aAAa,GAAC,EAApB;;AACD,OAAI,IAAIC,CAAR,IAAaL,YAAb,EACA;AACIG,IAAAA,UAAU,CAACG,IAAX,CAAgB;AAACC,MAAAA,GAAG,EAACF,CAAL;AAAOG,MAAAA,KAAK,EAACR,YAAY,CAACK,CAAD;AAAzB,KAAhB;AACH;;AACDI,EAAAA,OAAO,CAACC,GAAR,CAAYP,UAAZ;;AARkB,kBASOR,QAAQ,CAAC,CAAD,CATf;AAAA,MASXgB,MATW;AAAA,MASJC,SATI;;AAAA,mBAUGjB,QAAQ,CAAC,KAAD,CAVX;AAAA,MAUXkB,IAVW;AAAA,MAUNC,OAVM;;AAAA,mBAWDnB,QAAQ,CAAC,KAAD,CAXP;AAAA,MAWXoB,EAXW;AAAA,MAWRC,KAXQ;;AAAA,mBAYOrB,QAAQ,CAAC,KAAD,CAZf;AAAA,MAYXsB,MAZW;AAAA,MAYJC,SAZI;;AAalB,MAAMC,eAAe,GAAC,SAAhBA,eAAgB,GAAI;AAAC;AACvB1B,IAAAA,KAAK,CAAC2B,GAAN,oDACCC,IADD,CACM,UAACC,IAAD,EAAQ;AACVb,MAAAA,OAAO,CAACC,GAAR,CAAYY,IAAZ;AACA,UAAMd,KAAK,GAACG,MAAM,GAACW,IAAI,CAACA,IAAL,CAAUpB,KAAV,CAAgBa,EAAhB,CAAnB;AACAG,MAAAA,SAAS,CAACV,KAAD,CAAT;AACH,KALD,WAKS,UAAAe,KAAK,EAAE;AACZd,MAAAA,OAAO,CAACC,GAAR,CAAYa,KAAZ;AACH,KAPD;AASH,GAVD;;AAWA,SAEI;AAAA,qCAAe,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADJ,CADJ,EAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8CAJJ,EAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEQpB,UAAU,CAACqB,GAAX,CAAe,UAACC,IAAD;AAAA,WACP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKA,IAAI,CAAClB,GAAV,CADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKkB,IAAI,CAACjB,KAAV,CAFJ,CADO;AAAA,GAAf,CAFR,CALJ;AAAA;AAAA;AAAA,gmMAFJ;AAmFH;;GA3GSV,K;;KAAAA,K;;AAuHR,eAAeA,KAAf","sourcesContent":["import Axios from 'axios';\r\nimport React,{useState,useEffect} from 'react';\r\nimport Head from 'next/head';\r\n function Index(props){\r\n    var currencylist=props.posts.rates;\r\n     const currencies=[];\r\n     const currencyValue=[];\r\n    for(var i in currencylist)\r\n    {\r\n        currencies.push({key:i,value:currencylist[i]})\r\n    } \r\n    console.log(currencies)\r\n    const [amount,setamount]=useState(1);\r\n    const [from,setFrom]=useState(\"USD\");\r\n    const [to,setTo]=useState(\"INR\");\r\n    const [result,setResult]=useState(false);\r\n    const convertCurrency=()=>{/*https://api.exchangeratesapi.io/latest?base=${from}&symbols=${to}&amount=${amount}*/\r\n        Axios.get(`https://api.exchangeratesapi.io/latest?base=USD`)\r\n        .then((data)=>{\r\n            console.log(data)\r\n            const value=amount*data.data.rates[to]\r\n            setResult(value)\r\n        }).catch(error=>{\r\n            console.log(error);\r\n        })\r\n\r\n    }\r\n    return(\r\n        \r\n        <div className=\"Converter\">\r\n            <Head>\r\n                <title>Currency converter</title>\r\n            </Head>\r\n            <h2>Latest Foreign currency exchange rates</h2>\r\n            <table>\r\n                {\r\n                    currencies.map((post)=>(\r\n                            <tr>\r\n                                <th>{post.key}</th>\r\n                                <th>{post.value}</th>\r\n                            </tr>\r\n                    ))\r\n                }\r\n            </table>\r\n         \r\n       \r\n        <style jsx>\r\n        {`\r\n        @media only screen and (min-width:900px){\r\n            .Converter{\r\n                margin-top:3%;\r\n                margin-left:40%;\r\n                \r\n            }\r\n        }\r\n        @media only screen and (max-width:899px){\r\n            .Converter{\r\n                margin-left:10vw;\r\n            }\r\n        }\r\n        table {\r\n            border-collapse: collapse;\r\n            border-spacing: 0;\r\n            width: 40%;\r\n            border: 1px solid #ddd;\r\n          }\r\n          \r\n          th, td {\r\n            text-align: left;\r\n            padding: 16px;\r\n          }\r\n          \r\n          tr:nth-child(even) {\r\n            background-color: #f2f2f2;\r\n          }\r\n       \r\n        .Form input, select {\r\n            padding: 5px;\r\n            margin: 5px 10px;\r\n            border-radius: 5px;\r\n            border: 1px solid rgba(119, 119, 119, 0.5);\r\n            \r\n        }\r\n        \r\n        .Form button {\r\n            padding: 5px 10px;\r\n            border-radius: 5px;\r\n            background: rgb(11, 170, 59);\r\n            color: white;\r\n            border: none;\r\n        }\r\n       \r\n        .Converter h3 {\r\n            background-color: #ccc;\r\n            border-radius: 10px;\r\n            padding: 15px;\r\n            width:300px;\r\n            font-size: 30px;\r\n            color:black;\r\n            \r\n        }\r\n        \r\n        .Converter h2 span {\r\n            color: rgb(11, 170, 59);\r\n        }\r\n        `}\r\n    </style>\r\n    </div>\r\n\r\n    );\r\n}\r\nexport async function getStaticProps() {\r\n \r\n    const res = await fetch('https://api.exchangeratesapi.io/latest?base=USD')\r\n    const posts = await res.json()\r\n    \r\n    return {\r\n      props: {\r\n        posts,\r\n      },\r\n    }\r\n  }\r\n  export default Index;"]},"metadata":{},"sourceType":"module"}