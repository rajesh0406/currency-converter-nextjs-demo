{"ast":null,"code":"var _jsxFileName = \"C:\\\\git-test\\\\Nextjs\\\\bitprice\\\\pages\\\\index.js\";\nimport _JSXStyle from \"styled-jsx/style\";\nvar __jsx = React.createElement;\nimport Axios from 'axios';\nimport React, { useState, useEffect } from 'react';\nimport Head from 'next/head';\n\nfunction Index(props) {\n  var currencylist = props.posts.rates;\n  const currencies = [];\n  const currencyValue = [];\n\n  for (var i in currencylist) {\n    currencies.push({\n      key: i,\n      value: currencylist[i]\n    });\n  }\n\n  console.log(currencies);\n  const {\n    0: amount,\n    1: setamount\n  } = useState(1);\n  const {\n    0: from,\n    1: setFrom\n  } = useState(\"USD\");\n  const {\n    0: to,\n    1: setTo\n  } = useState(\"INR\");\n  const {\n    0: result,\n    1: setResult\n  } = useState(false);\n\n  const convertCurrency = () => {\n    /*https://api.exchangeratesapi.io/latest?base=${from}&symbols=${to}&amount=${amount}*/\n    Axios.get(`https://api.exchangeratesapi.io/latest?base=USD`).then(data => {\n      console.log(data);\n      const value = amount * data.data.rates[to];\n      setResult(value);\n    }).catch(error => {\n      console.log(error);\n    });\n  };\n\n  return __jsx(\"div\", {\n    className: \"jsx-1716816417\" + \" \" + \"Converter\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }, __jsx(Head, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }\n  }, __jsx(\"title\", {\n    className: \"jsx-1716816417\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 17\n    }\n  }, \"Currency converter\")), __jsx(\"h2\", {\n    className: \"jsx-1716816417\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }\n  }, \"Latest Foreign currency exchange rates\"), __jsx(\"div\", {\n    className: \"jsx-1716816417\" + \" \" + \"currency-table\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }\n  }, __jsx(\"table\", {\n    className: \"jsx-1716816417\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }\n  }, currencies.map(post => __jsx(\"tr\", {\n    className: \"jsx-1716816417\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 29\n    }\n  }, __jsx(\"th\", {\n    className: \"jsx-1716816417\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 33\n    }\n  }, post.key), __jsx(\"th\", {\n    className: \"jsx-1716816417\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 33\n    }\n  }, post.value))))), __jsx(_JSXStyle, {\n    id: \"1716816417\",\n    __self: this\n  }, \"@media only screen and (min-width:900px){.Converter.jsx-1716816417{margin-top:3%;margin-left:40%;}}@media only screen and (max-width:899px){.Converter.jsx-1716816417{margin-left:30vw;}}.currency-table.jsx-1716816417{height:500px;overflow:auto;width:40%;}table.jsx-1716816417{border-collapse:collapse;border-spacing:0;border:1px solid #ddd;}th.jsx-1716816417,td.jsx-1716816417{text-align:left;padding:16px;}tr.jsx-1716816417:nth-child(even){background-color:#f2f2f2;}.Form.jsx-1716816417 input.jsx-1716816417,select.jsx-1716816417{padding:5px;margin:5px 10px;border-radius:5px;border:1px solid rgba(119,119,119,0.5);}.Form.jsx-1716816417 button.jsx-1716816417{padding:5px 10px;border-radius:5px;background:rgb(11,170,59);color:white;border:none;}.Converter.jsx-1716816417 h3.jsx-1716816417{background-color:#ccc;border-radius:10px;padding:15px;width:300px;font-size:30px;color:black;}.Converter.jsx-1716816417 h2.jsx-1716816417 span.jsx-1716816417{color:rgb(11,170,59);}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkM6XFxnaXQtdGVzdFxcTmV4dGpzXFxiaXRwcmljZVxccGFnZXNcXGluZGV4LmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQWdEUyxBQUk4QixBQU9HLEFBSVIsQUFNYSxBQVFULEFBS1MsQUFJYixBQVFLLEFBUUssQUFVQyxZQXpCUCxDQXZCSCxDQVhNLEVBeUJOLENBbEJiLEFBbUNrQixJQWtCdEIsQ0FWdUIsR0FoQ0YsQUFZbkIsRUFsQlksQ0F1QlEsQ0FUcEIsQ0F4QkUsS0F5QzRCLEVBN0JoQyxJQXFDaUIsQ0EvQlMsSUFnQm9CLFFBZ0IvQixPQVJDLEdBdkJkLEVBZ0NpQixPQVJILFFBU0QsSUFoQmYsQUFRQSxRQVVBIiwiZmlsZSI6IkM6XFxnaXQtdGVzdFxcTmV4dGpzXFxiaXRwcmljZVxccGFnZXNcXGluZGV4LmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IEF4aW9zIGZyb20gJ2F4aW9zJztcclxuaW1wb3J0IFJlYWN0LHt1c2VTdGF0ZSx1c2VFZmZlY3R9IGZyb20gJ3JlYWN0JztcclxuaW1wb3J0IEhlYWQgZnJvbSAnbmV4dC9oZWFkJztcclxuIGZ1bmN0aW9uIEluZGV4KHByb3BzKXtcclxuICAgIHZhciBjdXJyZW5jeWxpc3Q9cHJvcHMucG9zdHMucmF0ZXM7XHJcbiAgICAgY29uc3QgY3VycmVuY2llcz1bXTtcclxuICAgICBjb25zdCBjdXJyZW5jeVZhbHVlPVtdO1xyXG4gICAgZm9yKHZhciBpIGluIGN1cnJlbmN5bGlzdClcclxuICAgIHtcclxuICAgICAgICBjdXJyZW5jaWVzLnB1c2goe2tleTppLHZhbHVlOmN1cnJlbmN5bGlzdFtpXX0pXHJcbiAgICB9IFxyXG4gICAgY29uc29sZS5sb2coY3VycmVuY2llcylcclxuICAgIGNvbnN0IFthbW91bnQsc2V0YW1vdW50XT11c2VTdGF0ZSgxKTtcclxuICAgIGNvbnN0IFtmcm9tLHNldEZyb21dPXVzZVN0YXRlKFwiVVNEXCIpO1xyXG4gICAgY29uc3QgW3RvLHNldFRvXT11c2VTdGF0ZShcIklOUlwiKTtcclxuICAgIGNvbnN0IFtyZXN1bHQsc2V0UmVzdWx0XT11c2VTdGF0ZShmYWxzZSk7XHJcbiAgICBjb25zdCBjb252ZXJ0Q3VycmVuY3k9KCk9PnsvKmh0dHBzOi8vYXBpLmV4Y2hhbmdlcmF0ZXNhcGkuaW8vbGF0ZXN0P2Jhc2U9JHtmcm9tfSZzeW1ib2xzPSR7dG99JmFtb3VudD0ke2Ftb3VudH0qL1xyXG4gICAgICAgIEF4aW9zLmdldChgaHR0cHM6Ly9hcGkuZXhjaGFuZ2VyYXRlc2FwaS5pby9sYXRlc3Q/YmFzZT1VU0RgKVxyXG4gICAgICAgIC50aGVuKChkYXRhKT0+e1xyXG4gICAgICAgICAgICBjb25zb2xlLmxvZyhkYXRhKVxyXG4gICAgICAgICAgICBjb25zdCB2YWx1ZT1hbW91bnQqZGF0YS5kYXRhLnJhdGVzW3RvXVxyXG4gICAgICAgICAgICBzZXRSZXN1bHQodmFsdWUpXHJcbiAgICAgICAgfSkuY2F0Y2goZXJyb3I9PntcclxuICAgICAgICAgICAgY29uc29sZS5sb2coZXJyb3IpO1xyXG4gICAgICAgIH0pXHJcblxyXG4gICAgfVxyXG4gICAgcmV0dXJuKFxyXG4gICAgICAgIFxyXG4gICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiQ29udmVydGVyXCI+XHJcbiAgICAgICAgICAgIDxIZWFkPlxyXG4gICAgICAgICAgICAgICAgPHRpdGxlPkN1cnJlbmN5IGNvbnZlcnRlcjwvdGl0bGU+XHJcbiAgICAgICAgICAgIDwvSGVhZD5cclxuICAgICAgICAgICAgPGgyPkxhdGVzdCBGb3JlaWduIGN1cnJlbmN5IGV4Y2hhbmdlIHJhdGVzPC9oMj5cclxuICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJjdXJyZW5jeS10YWJsZVwiPlxyXG4gICAgICAgICAgICA8dGFibGU+XHJcbiAgICAgICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICAgICAgY3VycmVuY2llcy5tYXAoKHBvc3QpPT4oXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dHI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRoPntwb3N0LmtleX08L3RoPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0aD57cG9zdC52YWx1ZX08L3RoPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90cj5cclxuICAgICAgICAgICAgICAgICAgICApKVxyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICA8L3RhYmxlPlxyXG4gICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgIFxyXG4gICAgICAgIDxzdHlsZSBqc3g+XHJcbiAgICAgICAge2BcclxuICAgICAgICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtaW4td2lkdGg6OTAwcHgpe1xyXG4gICAgICAgICAgICAuQ29udmVydGVye1xyXG4gICAgICAgICAgICAgICAgbWFyZ2luLXRvcDozJTtcclxuICAgICAgICAgICAgICAgIG1hcmdpbi1sZWZ0OjQwJTtcclxuICAgICAgICAgICAgICAgIFxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgICAgIEBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1heC13aWR0aDo4OTlweCl7XHJcbiAgICAgICAgICAgIC5Db252ZXJ0ZXJ7XHJcbiAgICAgICAgICAgICAgICBtYXJnaW4tbGVmdDozMHZ3O1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgICAgIC5jdXJyZW5jeS10YWJsZXtcclxuICAgICAgICAgICAgaGVpZ2h0OjUwMHB4O1xyXG4gICAgICAgICAgICBvdmVyZmxvdzphdXRvO1xyXG4gICAgICAgICAgICB3aWR0aDogNDAlO1xyXG5cclxuICAgICAgICB9XHJcbiAgICAgICAgdGFibGUge1xyXG4gICAgICAgICAgICBib3JkZXItY29sbGFwc2U6IGNvbGxhcHNlO1xyXG4gICAgICAgICAgICBcclxuICAgICAgICAgICAgYm9yZGVyLXNwYWNpbmc6IDA7XHJcbiAgICAgICAgICAgXHJcbiAgICAgICAgICAgIGJvcmRlcjogMXB4IHNvbGlkICNkZGQ7XHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgICBcclxuICAgICAgICAgIHRoLCB0ZCB7XHJcbiAgICAgICAgICAgIHRleHQtYWxpZ246IGxlZnQ7XHJcbiAgICAgICAgICAgIHBhZGRpbmc6IDE2cHg7XHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgICBcclxuICAgICAgICAgIHRyOm50aC1jaGlsZChldmVuKSB7XHJcbiAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6ICNmMmYyZjI7XHJcbiAgICAgICAgICB9XHJcbiAgICAgICBcclxuICAgICAgICAuRm9ybSBpbnB1dCwgc2VsZWN0IHtcclxuICAgICAgICAgICAgcGFkZGluZzogNXB4O1xyXG4gICAgICAgICAgICBtYXJnaW46IDVweCAxMHB4O1xyXG4gICAgICAgICAgICBib3JkZXItcmFkaXVzOiA1cHg7XHJcbiAgICAgICAgICAgIGJvcmRlcjogMXB4IHNvbGlkIHJnYmEoMTE5LCAxMTksIDExOSwgMC41KTtcclxuICAgICAgICAgICAgXHJcbiAgICAgICAgfVxyXG4gICAgICAgIFxyXG4gICAgICAgIC5Gb3JtIGJ1dHRvbiB7XHJcbiAgICAgICAgICAgIHBhZGRpbmc6IDVweCAxMHB4O1xyXG4gICAgICAgICAgICBib3JkZXItcmFkaXVzOiA1cHg7XHJcbiAgICAgICAgICAgIGJhY2tncm91bmQ6IHJnYigxMSwgMTcwLCA1OSk7XHJcbiAgICAgICAgICAgIGNvbG9yOiB3aGl0ZTtcclxuICAgICAgICAgICAgYm9yZGVyOiBub25lO1xyXG4gICAgICAgIH1cclxuICAgICAgIFxyXG4gICAgICAgIC5Db252ZXJ0ZXIgaDMge1xyXG4gICAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjY2NjO1xyXG4gICAgICAgICAgICBib3JkZXItcmFkaXVzOiAxMHB4O1xyXG4gICAgICAgICAgICBwYWRkaW5nOiAxNXB4O1xyXG4gICAgICAgICAgICB3aWR0aDozMDBweDtcclxuICAgICAgICAgICAgZm9udC1zaXplOiAzMHB4O1xyXG4gICAgICAgICAgICBjb2xvcjpibGFjaztcclxuICAgICAgICAgICAgXHJcbiAgICAgICAgfVxyXG4gICAgICAgIFxyXG4gICAgICAgIC5Db252ZXJ0ZXIgaDIgc3BhbiB7XHJcbiAgICAgICAgICAgIGNvbG9yOiByZ2IoMTEsIDE3MCwgNTkpO1xyXG4gICAgICAgIH1cclxuICAgICAgICBgfVxyXG4gICAgPC9zdHlsZT5cclxuICAgIDwvZGl2PlxyXG5cclxuICAgICk7XHJcbn1cclxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGdldFN0YXRpY1Byb3BzKCkge1xyXG4gXHJcbiAgICBjb25zdCByZXMgPSBhd2FpdCBmZXRjaCgnaHR0cHM6Ly9hcGkuZXhjaGFuZ2VyYXRlc2FwaS5pby9sYXRlc3Q/YmFzZT1VU0QnKVxyXG4gICAgY29uc3QgcG9zdHMgPSBhd2FpdCByZXMuanNvbigpXHJcbiAgICBcclxuICAgIHJldHVybiB7XHJcbiAgICAgIHByb3BzOiB7XHJcbiAgICAgICAgcG9zdHMsXHJcbiAgICAgIH0sXHJcbiAgICB9XHJcbiAgfVxyXG4gIGV4cG9ydCBkZWZhdWx0IEluZGV4OyJdfQ== */\\n/*@ sourceURL=C:\\\\\\\\git-test\\\\\\\\Nextjs\\\\\\\\bitprice\\\\\\\\pages\\\\\\\\index.js */\"));\n}\n\nexport async function getStaticProps() {\n  const res = await fetch('https://api.exchangeratesapi.io/latest?base=USD');\n  const posts = await res.json();\n  return {\n    props: {\n      posts\n    }\n  };\n}\nexport default Index;","map":{"version":3,"sources":["C:/git-test/Nextjs/bitprice/pages/index.js"],"names":["Axios","React","useState","useEffect","Head","Index","props","currencylist","posts","rates","currencies","currencyValue","i","push","key","value","console","log","amount","setamount","from","setFrom","to","setTo","result","setResult","convertCurrency","get","then","data","catch","error","map","post","getStaticProps","res","fetch","json"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,IAAcC,QAAd,EAAuBC,SAAvB,QAAuC,OAAvC;AACA,OAAOC,IAAP,MAAiB,WAAjB;;AACC,SAASC,KAAT,CAAeC,KAAf,EAAqB;AAClB,MAAIC,YAAY,GAACD,KAAK,CAACE,KAAN,CAAYC,KAA7B;AACC,QAAMC,UAAU,GAAC,EAAjB;AACA,QAAMC,aAAa,GAAC,EAApB;;AACD,OAAI,IAAIC,CAAR,IAAaL,YAAb,EACA;AACIG,IAAAA,UAAU,CAACG,IAAX,CAAgB;AAACC,MAAAA,GAAG,EAACF,CAAL;AAAOG,MAAAA,KAAK,EAACR,YAAY,CAACK,CAAD;AAAzB,KAAhB;AACH;;AACDI,EAAAA,OAAO,CAACC,GAAR,CAAYP,UAAZ;AACA,QAAM;AAAA,OAACQ,MAAD;AAAA,OAAQC;AAAR,MAAmBjB,QAAQ,CAAC,CAAD,CAAjC;AACA,QAAM;AAAA,OAACkB,IAAD;AAAA,OAAMC;AAAN,MAAenB,QAAQ,CAAC,KAAD,CAA7B;AACA,QAAM;AAAA,OAACoB,EAAD;AAAA,OAAIC;AAAJ,MAAWrB,QAAQ,CAAC,KAAD,CAAzB;AACA,QAAM;AAAA,OAACsB,MAAD;AAAA,OAAQC;AAAR,MAAmBvB,QAAQ,CAAC,KAAD,CAAjC;;AACA,QAAMwB,eAAe,GAAC,MAAI;AAAC;AACvB1B,IAAAA,KAAK,CAAC2B,GAAN,CAAW,iDAAX,EACCC,IADD,CACOC,IAAD,IAAQ;AACVb,MAAAA,OAAO,CAACC,GAAR,CAAYY,IAAZ;AACA,YAAMd,KAAK,GAACG,MAAM,GAACW,IAAI,CAACA,IAAL,CAAUpB,KAAV,CAAgBa,EAAhB,CAAnB;AACAG,MAAAA,SAAS,CAACV,KAAD,CAAT;AACH,KALD,EAKGe,KALH,CAKSC,KAAK,IAAE;AACZf,MAAAA,OAAO,CAACC,GAAR,CAAYc,KAAZ;AACH,KAPD;AASH,GAVD;;AAWA,SAEI;AAAA,wCAAe,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADJ,CADJ,EAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8CAJJ,EAKI;AAAA,wCAAe,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEQrB,UAAU,CAACsB,GAAX,CAAgBC,IAAD,IACP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKA,IAAI,CAACnB,GAAV,CADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKmB,IAAI,CAAClB,KAAV,CAFJ,CADR,CAFR,CADA,CALJ;AAAA;AAAA;AAAA,2+MAFJ;AA2FH;;AACD,OAAO,eAAemB,cAAf,GAAgC;AAEnC,QAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,iDAAD,CAAvB;AACA,QAAM5B,KAAK,GAAG,MAAM2B,GAAG,CAACE,IAAJ,EAApB;AAEA,SAAO;AACL/B,IAAAA,KAAK,EAAE;AACLE,MAAAA;AADK;AADF,GAAP;AAKD;AACD,eAAeH,KAAf","sourcesContent":["import Axios from 'axios';\r\nimport React,{useState,useEffect} from 'react';\r\nimport Head from 'next/head';\r\n function Index(props){\r\n    var currencylist=props.posts.rates;\r\n     const currencies=[];\r\n     const currencyValue=[];\r\n    for(var i in currencylist)\r\n    {\r\n        currencies.push({key:i,value:currencylist[i]})\r\n    } \r\n    console.log(currencies)\r\n    const [amount,setamount]=useState(1);\r\n    const [from,setFrom]=useState(\"USD\");\r\n    const [to,setTo]=useState(\"INR\");\r\n    const [result,setResult]=useState(false);\r\n    const convertCurrency=()=>{/*https://api.exchangeratesapi.io/latest?base=${from}&symbols=${to}&amount=${amount}*/\r\n        Axios.get(`https://api.exchangeratesapi.io/latest?base=USD`)\r\n        .then((data)=>{\r\n            console.log(data)\r\n            const value=amount*data.data.rates[to]\r\n            setResult(value)\r\n        }).catch(error=>{\r\n            console.log(error);\r\n        })\r\n\r\n    }\r\n    return(\r\n        \r\n        <div className=\"Converter\">\r\n            <Head>\r\n                <title>Currency converter</title>\r\n            </Head>\r\n            <h2>Latest Foreign currency exchange rates</h2>\r\n            <div className=\"currency-table\">\r\n            <table>\r\n                {\r\n                    currencies.map((post)=>(\r\n                            <tr>\r\n                                <th>{post.key}</th>\r\n                                <th>{post.value}</th>\r\n                            </tr>\r\n                    ))\r\n                }\r\n            </table>\r\n            </div>\r\n       \r\n        <style jsx>\r\n        {`\r\n        @media only screen and (min-width:900px){\r\n            .Converter{\r\n                margin-top:3%;\r\n                margin-left:40%;\r\n                \r\n            }\r\n        }\r\n        @media only screen and (max-width:899px){\r\n            .Converter{\r\n                margin-left:30vw;\r\n            }\r\n        }\r\n        .currency-table{\r\n            height:500px;\r\n            overflow:auto;\r\n            width: 40%;\r\n\r\n        }\r\n        table {\r\n            border-collapse: collapse;\r\n            \r\n            border-spacing: 0;\r\n           \r\n            border: 1px solid #ddd;\r\n          }\r\n          \r\n          th, td {\r\n            text-align: left;\r\n            padding: 16px;\r\n          }\r\n          \r\n          tr:nth-child(even) {\r\n            background-color: #f2f2f2;\r\n          }\r\n       \r\n        .Form input, select {\r\n            padding: 5px;\r\n            margin: 5px 10px;\r\n            border-radius: 5px;\r\n            border: 1px solid rgba(119, 119, 119, 0.5);\r\n            \r\n        }\r\n        \r\n        .Form button {\r\n            padding: 5px 10px;\r\n            border-radius: 5px;\r\n            background: rgb(11, 170, 59);\r\n            color: white;\r\n            border: none;\r\n        }\r\n       \r\n        .Converter h3 {\r\n            background-color: #ccc;\r\n            border-radius: 10px;\r\n            padding: 15px;\r\n            width:300px;\r\n            font-size: 30px;\r\n            color:black;\r\n            \r\n        }\r\n        \r\n        .Converter h2 span {\r\n            color: rgb(11, 170, 59);\r\n        }\r\n        `}\r\n    </style>\r\n    </div>\r\n\r\n    );\r\n}\r\nexport async function getStaticProps() {\r\n \r\n    const res = await fetch('https://api.exchangeratesapi.io/latest?base=USD')\r\n    const posts = await res.json()\r\n    \r\n    return {\r\n      props: {\r\n        posts,\r\n      },\r\n    }\r\n  }\r\n  export default Index;"]},"metadata":{},"sourceType":"module"}