{"ast":null,"code":"var _jsxFileName = \"C:\\\\git-test\\\\Nextjs\\\\bitprice\\\\pages\\\\index.js\";\nimport _JSXStyle from \"styled-jsx/style\";\nvar __jsx = React.createElement;\nimport Axios from 'axios';\nimport React, { useState, useEffect } from 'react';\nimport Head from 'next/head';\n\nfunction Index(props) {\n  const currencies = [];\n  const currencyValue = [];\n  var currencylist = props.posts.rates;\n  const array = [];\n\n  for (var i in currencylist) {\n    array.push(currencylist[i]);\n  }\n\n  console.log(array);\n  const {\n    0: amount,\n    1: setamount\n  } = useState(1);\n  const {\n    0: from,\n    1: setFrom\n  } = useState(\"USD\");\n  const {\n    0: to,\n    1: setTo\n  } = useState(\"INR\");\n  const {\n    0: result,\n    1: setResult\n  } = useState(false);\n\n  const convertCurrency = () => {\n    /*https://api.exchangeratesapi.io/latest?base=${from}&symbols=${to}&amount=${amount}*/\n    Axios.get(`https://api.exchangeratesapi.io/latest?base=USD`).then(data => {\n      console.log(data);\n      const value = amount * data.data.rates[to];\n      setResult(value);\n    }).catch(error => {\n      console.log(error);\n    });\n  };\n\n  return __jsx(\"div\", {\n    className: \"jsx-2035709732\" + \" \" + \"Converter\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }, __jsx(Head, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }\n  }, __jsx(\"title\", {\n    className: \"jsx-2035709732\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 17\n    }\n  }, \"Currency converter\")), __jsx(\"h2\", {\n    className: \"jsx-2035709732\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }\n  }, \"Latest Foreign currency exchange rates\"), __jsx(\"table\", {\n    className: \"jsx-2035709732\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }\n  }, currencylist.map(post => __jsx(\"tr\", {\n    className: \"jsx-2035709732\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 29\n    }\n  }, __jsx(\"th\", {\n    className: \"jsx-2035709732\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 33\n    }\n  }, post)))), __jsx(_JSXStyle, {\n    id: \"2035709732\",\n    __self: this\n  }, \"@media only screen and (min-width:900px){.Converter.jsx-2035709732{margin-top:3%;margin-left:40%;}}table.jsx-2035709732{border-collapse:collapse;border-spacing:0;width:100%;border:1px solid #ddd;}th.jsx-2035709732,td.jsx-2035709732{text-align:left;padding:16px;}tr.jsx-2035709732:nth-child(even){background-color:#f2f2f2;}.Form.jsx-2035709732 input.jsx-2035709732,select.jsx-2035709732{padding:5px;margin:5px 10px;border-radius:5px;border:1px solid rgba(119,119,119,0.5);}.Form.jsx-2035709732 button.jsx-2035709732{padding:5px 10px;border-radius:5px;background:rgb(11,170,59);color:white;border:none;}.Converter.jsx-2035709732 h3.jsx-2035709732{background-color:#ccc;border-radius:10px;padding:15px;width:300px;font-size:30px;color:black;}.Converter.jsx-2035709732 h2.jsx-2035709732 span.jsx-2035709732{color:rgb(11,170,59);}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkM6XFxnaXQtdGVzdFxcTmV4dGpzXFxiaXRwcmljZVxccGFnZXNcXGluZGV4LmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQStDUyxBQUk4QixBQU1RLEFBT1QsQUFLUyxBQUliLEFBUUssQUFRSyxBQVVDLFlBekJQLEVBdEJHLEVBYU4sQ0FpQkssSUFrQnRCLENBVnVCLEdBaENGLEFBWW5CLEdBS29CLENBVHBCLENBWkUsS0E2QjRCLE1BUWYsQ0FoQ0YsSUFpQitCLE9BaEJwQixDQWdDWCxPQVJDLEtBU0csT0FSSCxFQXhCZCxNQWlDYSxJQWhCZixBQVFBLFFBVUEiLCJmaWxlIjoiQzpcXGdpdC10ZXN0XFxOZXh0anNcXGJpdHByaWNlXFxwYWdlc1xcaW5kZXguanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgQXhpb3MgZnJvbSAnYXhpb3MnO1xyXG5pbXBvcnQgUmVhY3Qse3VzZVN0YXRlLHVzZUVmZmVjdH0gZnJvbSAncmVhY3QnO1xyXG5pbXBvcnQgSGVhZCBmcm9tICduZXh0L2hlYWQnO1xyXG4gZnVuY3Rpb24gSW5kZXgocHJvcHMpe1xyXG4gICAgIGNvbnN0IGN1cnJlbmNpZXM9W107XHJcbiAgICAgY29uc3QgY3VycmVuY3lWYWx1ZT1bXTtcclxuICAgIHZhciBjdXJyZW5jeWxpc3Q9cHJvcHMucG9zdHMucmF0ZXM7XHJcbiAgICBjb25zdCBhcnJheT1bXVxyXG4gICAgZm9yKHZhciBpIGluIGN1cnJlbmN5bGlzdClcclxuICAgIHtcclxuICAgICAgICBhcnJheS5wdXNoKGN1cnJlbmN5bGlzdFtpXSlcclxuICAgIH0gXHJcbiAgICBjb25zb2xlLmxvZyhhcnJheSlcclxuICAgIGNvbnN0IFthbW91bnQsc2V0YW1vdW50XT11c2VTdGF0ZSgxKTtcclxuICAgIGNvbnN0IFtmcm9tLHNldEZyb21dPXVzZVN0YXRlKFwiVVNEXCIpO1xyXG4gICAgY29uc3QgW3RvLHNldFRvXT11c2VTdGF0ZShcIklOUlwiKTtcclxuICAgIGNvbnN0IFtyZXN1bHQsc2V0UmVzdWx0XT11c2VTdGF0ZShmYWxzZSk7XHJcbiAgICBjb25zdCBjb252ZXJ0Q3VycmVuY3k9KCk9PnsvKmh0dHBzOi8vYXBpLmV4Y2hhbmdlcmF0ZXNhcGkuaW8vbGF0ZXN0P2Jhc2U9JHtmcm9tfSZzeW1ib2xzPSR7dG99JmFtb3VudD0ke2Ftb3VudH0qL1xyXG4gICAgICAgIEF4aW9zLmdldChgaHR0cHM6Ly9hcGkuZXhjaGFuZ2VyYXRlc2FwaS5pby9sYXRlc3Q/YmFzZT1VU0RgKVxyXG4gICAgICAgIC50aGVuKChkYXRhKT0+e1xyXG4gICAgICAgICAgICBjb25zb2xlLmxvZyhkYXRhKVxyXG4gICAgICAgICAgICBjb25zdCB2YWx1ZT1hbW91bnQqZGF0YS5kYXRhLnJhdGVzW3RvXVxyXG4gICAgICAgICAgICBzZXRSZXN1bHQodmFsdWUpXHJcbiAgICAgICAgfSkuY2F0Y2goZXJyb3I9PntcclxuICAgICAgICAgICAgY29uc29sZS5sb2coZXJyb3IpO1xyXG4gICAgICAgIH0pXHJcblxyXG4gICAgfVxyXG4gICAgcmV0dXJuKFxyXG4gICAgICAgIFxyXG4gICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiQ29udmVydGVyXCI+XHJcbiAgICAgICAgICAgIDxIZWFkPlxyXG4gICAgICAgICAgICAgICAgPHRpdGxlPkN1cnJlbmN5IGNvbnZlcnRlcjwvdGl0bGU+XHJcbiAgICAgICAgICAgIDwvSGVhZD5cclxuICAgICAgICAgICAgPGgyPkxhdGVzdCBGb3JlaWduIGN1cnJlbmN5IGV4Y2hhbmdlIHJhdGVzPC9oMj5cclxuICAgICAgICAgICAgPHRhYmxlPlxyXG4gICAgICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgICAgIGN1cnJlbmN5bGlzdC5tYXAoKHBvc3QpPT4oXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dHI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRoPntwb3N0fTwvdGg+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RyPlxyXG4gICAgICAgICAgICAgICAgICAgICkpXHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIDwvdGFibGU+XHJcbiAgICAgICAgIFxyXG4gICAgICAgXHJcbiAgICAgICAgPHN0eWxlIGpzeD5cclxuICAgICAgICB7YFxyXG4gICAgICAgIEBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1pbi13aWR0aDo5MDBweCl7XHJcbiAgICAgICAgICAgIC5Db252ZXJ0ZXJ7XHJcbiAgICAgICAgICAgICAgICBtYXJnaW4tdG9wOjMlO1xyXG4gICAgICAgICAgICAgICAgbWFyZ2luLWxlZnQ6NDAlO1xyXG4gICAgICAgICAgICAgICAgXHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICAgICAgdGFibGUge1xyXG4gICAgICAgICAgICBib3JkZXItY29sbGFwc2U6IGNvbGxhcHNlO1xyXG4gICAgICAgICAgICBib3JkZXItc3BhY2luZzogMDtcclxuICAgICAgICAgICAgd2lkdGg6IDEwMCU7XHJcbiAgICAgICAgICAgIGJvcmRlcjogMXB4IHNvbGlkICNkZGQ7XHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgICBcclxuICAgICAgICAgIHRoLCB0ZCB7XHJcbiAgICAgICAgICAgIHRleHQtYWxpZ246IGxlZnQ7XHJcbiAgICAgICAgICAgIHBhZGRpbmc6IDE2cHg7XHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgICBcclxuICAgICAgICAgIHRyOm50aC1jaGlsZChldmVuKSB7XHJcbiAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6ICNmMmYyZjI7XHJcbiAgICAgICAgICB9XHJcbiAgICAgICBcclxuICAgICAgICAuRm9ybSBpbnB1dCwgc2VsZWN0IHtcclxuICAgICAgICAgICAgcGFkZGluZzogNXB4O1xyXG4gICAgICAgICAgICBtYXJnaW46IDVweCAxMHB4O1xyXG4gICAgICAgICAgICBib3JkZXItcmFkaXVzOiA1cHg7XHJcbiAgICAgICAgICAgIGJvcmRlcjogMXB4IHNvbGlkIHJnYmEoMTE5LCAxMTksIDExOSwgMC41KTtcclxuICAgICAgICAgICAgXHJcbiAgICAgICAgfVxyXG4gICAgICAgIFxyXG4gICAgICAgIC5Gb3JtIGJ1dHRvbiB7XHJcbiAgICAgICAgICAgIHBhZGRpbmc6IDVweCAxMHB4O1xyXG4gICAgICAgICAgICBib3JkZXItcmFkaXVzOiA1cHg7XHJcbiAgICAgICAgICAgIGJhY2tncm91bmQ6IHJnYigxMSwgMTcwLCA1OSk7XHJcbiAgICAgICAgICAgIGNvbG9yOiB3aGl0ZTtcclxuICAgICAgICAgICAgYm9yZGVyOiBub25lO1xyXG4gICAgICAgIH1cclxuICAgICAgIFxyXG4gICAgICAgIC5Db252ZXJ0ZXIgaDMge1xyXG4gICAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjY2NjO1xyXG4gICAgICAgICAgICBib3JkZXItcmFkaXVzOiAxMHB4O1xyXG4gICAgICAgICAgICBwYWRkaW5nOiAxNXB4O1xyXG4gICAgICAgICAgICB3aWR0aDozMDBweDtcclxuICAgICAgICAgICAgZm9udC1zaXplOiAzMHB4O1xyXG4gICAgICAgICAgICBjb2xvcjpibGFjaztcclxuICAgICAgICAgICAgXHJcbiAgICAgICAgfVxyXG4gICAgICAgIFxyXG4gICAgICAgIC5Db252ZXJ0ZXIgaDIgc3BhbiB7XHJcbiAgICAgICAgICAgIGNvbG9yOiByZ2IoMTEsIDE3MCwgNTkpO1xyXG4gICAgICAgIH1cclxuICAgICAgICBgfVxyXG4gICAgPC9zdHlsZT5cclxuICAgIDwvZGl2PlxyXG5cclxuICAgICk7XHJcbn1cclxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGdldFN0YXRpY1Byb3BzKCkge1xyXG4gXHJcbiAgICBjb25zdCByZXMgPSBhd2FpdCBmZXRjaCgnaHR0cHM6Ly9hcGkuZXhjaGFuZ2VyYXRlc2FwaS5pby9sYXRlc3Q/YmFzZT1VU0QnKVxyXG4gICAgY29uc3QgcG9zdHMgPSBhd2FpdCByZXMuanNvbigpXHJcbiAgICBcclxuICAgIHJldHVybiB7XHJcbiAgICAgIHByb3BzOiB7XHJcbiAgICAgICAgcG9zdHMsXHJcbiAgICAgIH0sXHJcbiAgICB9XHJcbiAgfVxyXG4gIGV4cG9ydCBkZWZhdWx0IEluZGV4OyJdfQ== */\\n/*@ sourceURL=C:\\\\\\\\git-test\\\\\\\\Nextjs\\\\\\\\bitprice\\\\\\\\pages\\\\\\\\index.js */\"));\n}\n\nexport async function getStaticProps() {\n  const res = await fetch('https://api.exchangeratesapi.io/latest?base=USD');\n  const posts = await res.json();\n  return {\n    props: {\n      posts\n    }\n  };\n}\nexport default Index;","map":{"version":3,"sources":["C:/git-test/Nextjs/bitprice/pages/index.js"],"names":["Axios","React","useState","useEffect","Head","Index","props","currencies","currencyValue","currencylist","posts","rates","array","i","push","console","log","amount","setamount","from","setFrom","to","setTo","result","setResult","convertCurrency","get","then","data","value","catch","error","map","post","getStaticProps","res","fetch","json"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,IAAcC,QAAd,EAAuBC,SAAvB,QAAuC,OAAvC;AACA,OAAOC,IAAP,MAAiB,WAAjB;;AACC,SAASC,KAAT,CAAeC,KAAf,EAAqB;AACjB,QAAMC,UAAU,GAAC,EAAjB;AACA,QAAMC,aAAa,GAAC,EAApB;AACD,MAAIC,YAAY,GAACH,KAAK,CAACI,KAAN,CAAYC,KAA7B;AACA,QAAMC,KAAK,GAAC,EAAZ;;AACA,OAAI,IAAIC,CAAR,IAAaJ,YAAb,EACA;AACIG,IAAAA,KAAK,CAACE,IAAN,CAAWL,YAAY,CAACI,CAAD,CAAvB;AACH;;AACDE,EAAAA,OAAO,CAACC,GAAR,CAAYJ,KAAZ;AACA,QAAM;AAAA,OAACK,MAAD;AAAA,OAAQC;AAAR,MAAmBhB,QAAQ,CAAC,CAAD,CAAjC;AACA,QAAM;AAAA,OAACiB,IAAD;AAAA,OAAMC;AAAN,MAAelB,QAAQ,CAAC,KAAD,CAA7B;AACA,QAAM;AAAA,OAACmB,EAAD;AAAA,OAAIC;AAAJ,MAAWpB,QAAQ,CAAC,KAAD,CAAzB;AACA,QAAM;AAAA,OAACqB,MAAD;AAAA,OAAQC;AAAR,MAAmBtB,QAAQ,CAAC,KAAD,CAAjC;;AACA,QAAMuB,eAAe,GAAC,MAAI;AAAC;AACvBzB,IAAAA,KAAK,CAAC0B,GAAN,CAAW,iDAAX,EACCC,IADD,CACOC,IAAD,IAAQ;AACVb,MAAAA,OAAO,CAACC,GAAR,CAAYY,IAAZ;AACA,YAAMC,KAAK,GAACZ,MAAM,GAACW,IAAI,CAACA,IAAL,CAAUjB,KAAV,CAAgBU,EAAhB,CAAnB;AACAG,MAAAA,SAAS,CAACK,KAAD,CAAT;AACH,KALD,EAKGC,KALH,CAKSC,KAAK,IAAE;AACZhB,MAAAA,OAAO,CAACC,GAAR,CAAYe,KAAZ;AACH,KAPD;AASH,GAVD;;AAWA,SAEI;AAAA,wCAAe,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADJ,CADJ,EAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8CAJJ,EAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEQtB,YAAY,CAACuB,GAAb,CAAkBC,IAAD,IACT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKA,IAAL,CADJ,CADR,CAFR,CALJ;AAAA;AAAA;AAAA,uxLAFJ;AA6EH;;AACD,OAAO,eAAeC,cAAf,GAAgC;AAEnC,QAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,iDAAD,CAAvB;AACA,QAAM1B,KAAK,GAAG,MAAMyB,GAAG,CAACE,IAAJ,EAApB;AAEA,SAAO;AACL/B,IAAAA,KAAK,EAAE;AACLI,MAAAA;AADK;AADF,GAAP;AAKD;AACD,eAAeL,KAAf","sourcesContent":["import Axios from 'axios';\r\nimport React,{useState,useEffect} from 'react';\r\nimport Head from 'next/head';\r\n function Index(props){\r\n     const currencies=[];\r\n     const currencyValue=[];\r\n    var currencylist=props.posts.rates;\r\n    const array=[]\r\n    for(var i in currencylist)\r\n    {\r\n        array.push(currencylist[i])\r\n    } \r\n    console.log(array)\r\n    const [amount,setamount]=useState(1);\r\n    const [from,setFrom]=useState(\"USD\");\r\n    const [to,setTo]=useState(\"INR\");\r\n    const [result,setResult]=useState(false);\r\n    const convertCurrency=()=>{/*https://api.exchangeratesapi.io/latest?base=${from}&symbols=${to}&amount=${amount}*/\r\n        Axios.get(`https://api.exchangeratesapi.io/latest?base=USD`)\r\n        .then((data)=>{\r\n            console.log(data)\r\n            const value=amount*data.data.rates[to]\r\n            setResult(value)\r\n        }).catch(error=>{\r\n            console.log(error);\r\n        })\r\n\r\n    }\r\n    return(\r\n        \r\n        <div className=\"Converter\">\r\n            <Head>\r\n                <title>Currency converter</title>\r\n            </Head>\r\n            <h2>Latest Foreign currency exchange rates</h2>\r\n            <table>\r\n                {\r\n                    currencylist.map((post)=>(\r\n                            <tr>\r\n                                <th>{post}</th>\r\n                            </tr>\r\n                    ))\r\n                }\r\n            </table>\r\n         \r\n       \r\n        <style jsx>\r\n        {`\r\n        @media only screen and (min-width:900px){\r\n            .Converter{\r\n                margin-top:3%;\r\n                margin-left:40%;\r\n                \r\n            }\r\n        }\r\n        table {\r\n            border-collapse: collapse;\r\n            border-spacing: 0;\r\n            width: 100%;\r\n            border: 1px solid #ddd;\r\n          }\r\n          \r\n          th, td {\r\n            text-align: left;\r\n            padding: 16px;\r\n          }\r\n          \r\n          tr:nth-child(even) {\r\n            background-color: #f2f2f2;\r\n          }\r\n       \r\n        .Form input, select {\r\n            padding: 5px;\r\n            margin: 5px 10px;\r\n            border-radius: 5px;\r\n            border: 1px solid rgba(119, 119, 119, 0.5);\r\n            \r\n        }\r\n        \r\n        .Form button {\r\n            padding: 5px 10px;\r\n            border-radius: 5px;\r\n            background: rgb(11, 170, 59);\r\n            color: white;\r\n            border: none;\r\n        }\r\n       \r\n        .Converter h3 {\r\n            background-color: #ccc;\r\n            border-radius: 10px;\r\n            padding: 15px;\r\n            width:300px;\r\n            font-size: 30px;\r\n            color:black;\r\n            \r\n        }\r\n        \r\n        .Converter h2 span {\r\n            color: rgb(11, 170, 59);\r\n        }\r\n        `}\r\n    </style>\r\n    </div>\r\n\r\n    );\r\n}\r\nexport async function getStaticProps() {\r\n \r\n    const res = await fetch('https://api.exchangeratesapi.io/latest?base=USD')\r\n    const posts = await res.json()\r\n    \r\n    return {\r\n      props: {\r\n        posts,\r\n      },\r\n    }\r\n  }\r\n  export default Index;"]},"metadata":{},"sourceType":"module"}