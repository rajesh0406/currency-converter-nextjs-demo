{"ast":null,"code":"var _jsxFileName = \"C:\\\\git-test\\\\Nextjs\\\\bitprice\\\\pages\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport _JSXStyle from \"styled-jsx/style\";\nvar __jsx = React.createElement;\nimport Axios from 'axios';\nimport React, { useState, useEffect } from 'react';\nimport Head from 'next/head';\n\nfunction Index() {\n  _s();\n\n  var _useState = useState(1),\n      amount = _useState[0],\n      setamount = _useState[1];\n\n  var _useState2 = useState(\"USD\"),\n      from = _useState2[0],\n      setFrom = _useState2[1];\n\n  var _useState3 = useState(\"INR\"),\n      to = _useState3[0],\n      setTo = _useState3[1];\n\n  var _useState4 = useState(false),\n      result = _useState4[0],\n      setResult = _useState4[1];\n\n  var currencies = [\"USD\", \"INR\", \"GBP\", \"EUR\", \"AUD\", \"CAD\", \"CNY\", \"JPY\", \"CHF\", \"BGN\", \"HRK\", \"CZK\", \"DKK\", \"HUF\", \"ISK\", \"NOK\", \"PLN\", \"RON\", \"RUB\", \"SEK\", \"CHF\", \"TRY\", \"GBP\", \"BRL\", \"CAD\", \"MXN\", \"USD\", \"ZAR\"];\n\n  var convertCurrency = function convertCurrency() {\n    /*https://api.exchangeratesapi.io/latest?base=${from}&symbols=${to}&amount=${amount}*/\n    Axios.get(\"https://api.exchangeratesapi.io/latest?base=USD\").then(function (data) {\n      console.log(data);\n      var value = amount * data.data.rates[to];\n      setResult(value);\n    })[\"catch\"](function (error) {\n      console.log(error);\n    });\n  };\n\n  return __jsx(\"div\", {\n    className: \"jsx-2368326430\" + \" \" + \"Converter\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }\n  }, __jsx(Head, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }\n  }, __jsx(\"title\", {\n    className: \"jsx-2368326430\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 17\n    }\n  }, \"Currency converter\")), __jsx(\"h3\", {\n    className: \"jsx-2368326430\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }\n  }, \"Latest Foreign currency exchange rates\"), __jsx(_JSXStyle, {\n    id: \"2368326430\",\n    __self: this\n  }, \"@media only screen and (min-width:900px){.Converter.jsx-2368326430{margin-top:3%;margin-left:40%;}}.Form.jsx-2368326430 input.jsx-2368326430,select.jsx-2368326430{padding:5px;margin:5px 10px;border-radius:5px;border:1px solid rgba(119,119,119,0.5);}.Form.jsx-2368326430 button.jsx-2368326430{padding:5px 10px;border-radius:5px;background:rgb(11,170,59);color:white;border:none;}.Converter.jsx-2368326430 h3.jsx-2368326430{background-color:#ccc;border-radius:10px;padding:15px;width:300px;font-size:30px;color:black;}.Converter.jsx-2368326430 h2.jsx-2368326430 span.jsx-2368326430{color:rgb(11,170,59);}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkM6XFxnaXQtdGVzdFxcTmV4dGpzXFxiaXRwcmljZVxccGFnZXNcXGluZGV4LmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQThCUyxBQUk4QixBQU9MLEFBUUssQUFRSyxBQVVDLFlBekJQLEVBUEcsR0FlRCxJQWtCdEIsQ0FWdUIsTUFmRCxFQU5sQixLQWM0QixNQVFmLEtBZjZCLFFBZ0IvQixPQVJDLEtBU0csT0FSSCxRQVNELElBaEJmLEFBUUEsUUFVQSIsImZpbGUiOiJDOlxcZ2l0LXRlc3RcXE5leHRqc1xcYml0cHJpY2VcXHBhZ2VzXFxpbmRleC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBBeGlvcyBmcm9tICdheGlvcyc7XHJcbmltcG9ydCBSZWFjdCx7dXNlU3RhdGUsdXNlRWZmZWN0fSBmcm9tICdyZWFjdCc7XHJcbmltcG9ydCBIZWFkIGZyb20gJ25leHQvaGVhZCc7XHJcbiBmdW5jdGlvbiBJbmRleCgpe1xyXG4gICAgY29uc3QgW2Ftb3VudCxzZXRhbW91bnRdPXVzZVN0YXRlKDEpO1xyXG4gICAgY29uc3QgW2Zyb20sc2V0RnJvbV09dXNlU3RhdGUoXCJVU0RcIik7XHJcbiAgICBjb25zdCBbdG8sc2V0VG9dPXVzZVN0YXRlKFwiSU5SXCIpO1xyXG4gICAgY29uc3QgW3Jlc3VsdCxzZXRSZXN1bHRdPXVzZVN0YXRlKGZhbHNlKTtcclxuICAgIGNvbnN0IGN1cnJlbmNpZXM9W1wiVVNEXCIsXCJJTlJcIixcIkdCUFwiLFwiRVVSXCIsXCJBVURcIixcIkNBRFwiLFwiQ05ZXCIsXCJKUFlcIixcIkNIRlwiLFwiQkdOXCIsXCJIUktcIixcIkNaS1wiLFwiREtLXCIsXCJIVUZcIixcIklTS1wiXHJcbiAgICAsXCJOT0tcIixcIlBMTlwiLFwiUk9OXCIsXCJSVUJcIixcIlNFS1wiLFwiQ0hGXCIsXCJUUllcIixcIkdCUFwiLFwiQlJMXCIsXCJDQURcIixcIk1YTlwiLFwiVVNEXCIsXCJaQVJcIl07XHJcbiAgICBjb25zdCBjb252ZXJ0Q3VycmVuY3k9KCk9PnsvKmh0dHBzOi8vYXBpLmV4Y2hhbmdlcmF0ZXNhcGkuaW8vbGF0ZXN0P2Jhc2U9JHtmcm9tfSZzeW1ib2xzPSR7dG99JmFtb3VudD0ke2Ftb3VudH0qL1xyXG4gICAgICAgIEF4aW9zLmdldChgaHR0cHM6Ly9hcGkuZXhjaGFuZ2VyYXRlc2FwaS5pby9sYXRlc3Q/YmFzZT1VU0RgKVxyXG4gICAgICAgIC50aGVuKChkYXRhKT0+e1xyXG4gICAgICAgICAgICBjb25zb2xlLmxvZyhkYXRhKVxyXG4gICAgICAgICAgICBjb25zdCB2YWx1ZT1hbW91bnQqZGF0YS5kYXRhLnJhdGVzW3RvXVxyXG4gICAgICAgICAgICBzZXRSZXN1bHQodmFsdWUpXHJcbiAgICAgICAgfSkuY2F0Y2goZXJyb3I9PntcclxuICAgICAgICAgICAgY29uc29sZS5sb2coZXJyb3IpO1xyXG4gICAgICAgIH0pXHJcblxyXG4gICAgfVxyXG4gICAgcmV0dXJuKFxyXG4gICAgICAgIFxyXG4gICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiQ29udmVydGVyXCI+XHJcbiAgICAgICAgICAgIDxIZWFkPlxyXG4gICAgICAgICAgICAgICAgPHRpdGxlPkN1cnJlbmN5IGNvbnZlcnRlcjwvdGl0bGU+XHJcbiAgICAgICAgICAgIDwvSGVhZD5cclxuICAgICAgICAgICAgPGgzPkxhdGVzdCBGb3JlaWduIGN1cnJlbmN5IGV4Y2hhbmdlIHJhdGVzPC9oMz5cclxuICAgICAgIFxyXG4gICAgICAgIDxzdHlsZSBqc3g+XHJcbiAgICAgICAge2BcclxuICAgICAgICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtaW4td2lkdGg6OTAwcHgpe1xyXG4gICAgICAgICAgICAuQ29udmVydGVye1xyXG4gICAgICAgICAgICAgICAgbWFyZ2luLXRvcDozJTtcclxuICAgICAgICAgICAgICAgIG1hcmdpbi1sZWZ0OjQwJTtcclxuICAgICAgICAgICAgICAgIFxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgICAgXHJcbiAgICAgICAgLkZvcm0gaW5wdXQsIHNlbGVjdCB7XHJcbiAgICAgICAgICAgIHBhZGRpbmc6IDVweDtcclxuICAgICAgICAgICAgbWFyZ2luOiA1cHggMTBweDtcclxuICAgICAgICAgICAgYm9yZGVyLXJhZGl1czogNXB4O1xyXG4gICAgICAgICAgICBib3JkZXI6IDFweCBzb2xpZCByZ2JhKDExOSwgMTE5LCAxMTksIDAuNSk7XHJcbiAgICAgICAgICAgIFxyXG4gICAgICAgIH1cclxuICAgICAgICBcclxuICAgICAgICAuRm9ybSBidXR0b24ge1xyXG4gICAgICAgICAgICBwYWRkaW5nOiA1cHggMTBweDtcclxuICAgICAgICAgICAgYm9yZGVyLXJhZGl1czogNXB4O1xyXG4gICAgICAgICAgICBiYWNrZ3JvdW5kOiByZ2IoMTEsIDE3MCwgNTkpO1xyXG4gICAgICAgICAgICBjb2xvcjogd2hpdGU7XHJcbiAgICAgICAgICAgIGJvcmRlcjogbm9uZTtcclxuICAgICAgICB9XHJcbiAgICAgICBcclxuICAgICAgICAuQ29udmVydGVyIGgzIHtcclxuICAgICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogI2NjYztcclxuICAgICAgICAgICAgYm9yZGVyLXJhZGl1czogMTBweDtcclxuICAgICAgICAgICAgcGFkZGluZzogMTVweDtcclxuICAgICAgICAgICAgd2lkdGg6MzAwcHg7XHJcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogMzBweDtcclxuICAgICAgICAgICAgY29sb3I6YmxhY2s7XHJcbiAgICAgICAgICAgIFxyXG4gICAgICAgIH1cclxuICAgICAgICBcclxuICAgICAgICAuQ29udmVydGVyIGgyIHNwYW4ge1xyXG4gICAgICAgICAgICBjb2xvcjogcmdiKDExLCAxNzAsIDU5KTtcclxuICAgICAgICB9XHJcbiAgICAgICAgYH1cclxuICAgIDwvc3R5bGU+XHJcbiAgICA8L2Rpdj5cclxuXHJcbiAgICApO1xyXG59XHJcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBnZXRTdGF0aWNQcm9wcygpIHtcclxuICAgIC8vIENhbGwgYW4gZXh0ZXJuYWwgQVBJIGVuZHBvaW50IHRvIGdldCBwb3N0cy5cclxuICAgIC8vIFlvdSBjYW4gdXNlIGFueSBkYXRhIGZldGNoaW5nIGxpYnJhcnlcclxuICAgIGNvbnN0IHJlcyA9IGF3YWl0IGZldGNoKCdodHRwczovLy4uLi9wb3N0cycpXHJcbiAgICBjb25zdCBwb3N0cyA9IGF3YWl0IHJlcy5qc29uKClcclxuICBcclxuICAgIC8vIEJ5IHJldHVybmluZyB7IHByb3BzOiBwb3N0cyB9LCB0aGUgQmxvZyBjb21wb25lbnRcclxuICAgIC8vIHdpbGwgcmVjZWl2ZSBgcG9zdHNgIGFzIGEgcHJvcCBhdCBidWlsZCB0aW1lXHJcbiAgICByZXR1cm4ge1xyXG4gICAgICBwcm9wczoge1xyXG4gICAgICAgIHBvc3RzLFxyXG4gICAgICB9LFxyXG4gICAgfVxyXG4gIH1cclxuICBleHBvcnQgZGVmYXVsdCBJbmRleDsiXX0= */\\n/*@ sourceURL=C:\\\\\\\\git-test\\\\\\\\Nextjs\\\\\\\\bitprice\\\\\\\\pages\\\\\\\\index.js */\"));\n}\n\n_s(Index, \"Qj8Hrp/p1qxemNNaqMLqcKle0zA=\");\n\n_c = Index;\nexport var __N_SSG = true;\nexport default Index;\n\nvar _c;\n\n$RefreshReg$(_c, \"Index\");","map":{"version":3,"sources":["C:/git-test/Nextjs/bitprice/pages/index.js"],"names":["Axios","React","useState","useEffect","Head","Index","amount","setamount","from","setFrom","to","setTo","result","setResult","currencies","convertCurrency","get","then","data","console","log","value","rates","error"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,IAAcC,QAAd,EAAuBC,SAAvB,QAAuC,OAAvC;AACA,OAAOC,IAAP,MAAiB,WAAjB;;AACC,SAASC,KAAT,GAAgB;AAAA;;AAAA,kBACYH,QAAQ,CAAC,CAAD,CADpB;AAAA,MACNI,MADM;AAAA,MACCC,SADD;;AAAA,mBAEQL,QAAQ,CAAC,KAAD,CAFhB;AAAA,MAENM,IAFM;AAAA,MAEDC,OAFC;;AAAA,mBAGIP,QAAQ,CAAC,KAAD,CAHZ;AAAA,MAGNQ,EAHM;AAAA,MAGHC,KAHG;;AAAA,mBAIYT,QAAQ,CAAC,KAAD,CAJpB;AAAA,MAINU,MAJM;AAAA,MAICC,SAJD;;AAKb,MAAMC,UAAU,GAAC,CAAC,KAAD,EAAO,KAAP,EAAa,KAAb,EAAmB,KAAnB,EAAyB,KAAzB,EAA+B,KAA/B,EAAqC,KAArC,EAA2C,KAA3C,EAAiD,KAAjD,EAAuD,KAAvD,EAA6D,KAA7D,EAAmE,KAAnE,EAAyE,KAAzE,EAA+E,KAA/E,EAAqF,KAArF,EAChB,KADgB,EACV,KADU,EACJ,KADI,EACE,KADF,EACQ,KADR,EACc,KADd,EACoB,KADpB,EAC0B,KAD1B,EACgC,KADhC,EACsC,KADtC,EAC4C,KAD5C,EACkD,KADlD,EACwD,KADxD,CAAjB;;AAEA,MAAMC,eAAe,GAAC,SAAhBA,eAAgB,GAAI;AAAC;AACvBf,IAAAA,KAAK,CAACgB,GAAN,oDACCC,IADD,CACM,UAACC,IAAD,EAAQ;AACVC,MAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACA,UAAMG,KAAK,GAACf,MAAM,GAACY,IAAI,CAACA,IAAL,CAAUI,KAAV,CAAgBZ,EAAhB,CAAnB;AACAG,MAAAA,SAAS,CAACQ,KAAD,CAAT;AACH,KALD,WAKS,UAAAE,KAAK,EAAE;AACZJ,MAAAA,OAAO,CAACC,GAAR,CAAYG,KAAZ;AACH,KAPD;AASH,GAVD;;AAWA,SAEI;AAAA,wCAAe,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADJ,CADJ,EAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8CAJJ;AAAA;AAAA;AAAA,g0JAFJ;AAoDH;;GAtESlB,K;;KAAAA,K;;AAqFR,eAAeA,KAAf","sourcesContent":["import Axios from 'axios';\r\nimport React,{useState,useEffect} from 'react';\r\nimport Head from 'next/head';\r\n function Index(){\r\n    const [amount,setamount]=useState(1);\r\n    const [from,setFrom]=useState(\"USD\");\r\n    const [to,setTo]=useState(\"INR\");\r\n    const [result,setResult]=useState(false);\r\n    const currencies=[\"USD\",\"INR\",\"GBP\",\"EUR\",\"AUD\",\"CAD\",\"CNY\",\"JPY\",\"CHF\",\"BGN\",\"HRK\",\"CZK\",\"DKK\",\"HUF\",\"ISK\"\r\n    ,\"NOK\",\"PLN\",\"RON\",\"RUB\",\"SEK\",\"CHF\",\"TRY\",\"GBP\",\"BRL\",\"CAD\",\"MXN\",\"USD\",\"ZAR\"];\r\n    const convertCurrency=()=>{/*https://api.exchangeratesapi.io/latest?base=${from}&symbols=${to}&amount=${amount}*/\r\n        Axios.get(`https://api.exchangeratesapi.io/latest?base=USD`)\r\n        .then((data)=>{\r\n            console.log(data)\r\n            const value=amount*data.data.rates[to]\r\n            setResult(value)\r\n        }).catch(error=>{\r\n            console.log(error);\r\n        })\r\n\r\n    }\r\n    return(\r\n        \r\n        <div className=\"Converter\">\r\n            <Head>\r\n                <title>Currency converter</title>\r\n            </Head>\r\n            <h3>Latest Foreign currency exchange rates</h3>\r\n       \r\n        <style jsx>\r\n        {`\r\n        @media only screen and (min-width:900px){\r\n            .Converter{\r\n                margin-top:3%;\r\n                margin-left:40%;\r\n                \r\n            }\r\n        }\r\n       \r\n        .Form input, select {\r\n            padding: 5px;\r\n            margin: 5px 10px;\r\n            border-radius: 5px;\r\n            border: 1px solid rgba(119, 119, 119, 0.5);\r\n            \r\n        }\r\n        \r\n        .Form button {\r\n            padding: 5px 10px;\r\n            border-radius: 5px;\r\n            background: rgb(11, 170, 59);\r\n            color: white;\r\n            border: none;\r\n        }\r\n       \r\n        .Converter h3 {\r\n            background-color: #ccc;\r\n            border-radius: 10px;\r\n            padding: 15px;\r\n            width:300px;\r\n            font-size: 30px;\r\n            color:black;\r\n            \r\n        }\r\n        \r\n        .Converter h2 span {\r\n            color: rgb(11, 170, 59);\r\n        }\r\n        `}\r\n    </style>\r\n    </div>\r\n\r\n    );\r\n}\r\nexport async function getStaticProps() {\r\n    // Call an external API endpoint to get posts.\r\n    // You can use any data fetching library\r\n    const res = await fetch('https://.../posts')\r\n    const posts = await res.json()\r\n  \r\n    // By returning { props: posts }, the Blog component\r\n    // will receive `posts` as a prop at build time\r\n    return {\r\n      props: {\r\n        posts,\r\n      },\r\n    }\r\n  }\r\n  export default Index;"]},"metadata":{},"sourceType":"module"}